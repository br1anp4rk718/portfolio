<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
        <h2>Kitchen vs Table</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
        The Kitchen vs Table chat was a refreshing take on the type of experience we can expect at Devbootcamp. To be frank, I think my biggest fear coming into this experience was the possibility that this was nothing more than just a profit turning institution. Hearing Shereef speak about how you need to own your experience at Dev made me realize that I had certain expectations that I didn't even really knew I had. To a certain extent, I DID view this bootcamp curriculum as a consumer. A means to an end. Don't get me wrong, I've never been more excited and committed to something than this journey I am about to take. What I realized from listening to this video is that I need to take more responsibility and action for the outcome of my experience, instead of having certain expectations for the program. I'm excited and highly motivated to take charge of my actions and I know that if I come with the right mindset, I can make this the most fulfilling and rewarding experience of my life.


    </article>
    <article>
        My impression of DBC after seeing this video is at an all time high. Shereef sure knows how to motivate and inspire his students! His transparency and his ability to relate made a big impression on me. It reassured me that this is the type of learning experience where I can grow both as a developer and a better person. As long as I am accountable and not afraid to fail, I can reach my goals.
    </article>
    <article>
        I AM SUPER STOKED TO GET THIS STARTED!! RIGHT MINDSET WITH A GO GO ATTITUDE WILL DICTATE HOW AWESOME THIS IS GOING TO BE!! CAN'T WAIT!!
    </article>
    </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
        <h2>Your Thinking Style and Learning</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
       During week 1, we took the Gregoric Thinking Style quiz to determine what kind of thinking style we possessed. After taking the quiz, I came to the conclusion that I was an Abstract Sequential Thinker. The Abstract part of my brain enables me to visualize and conceive ideas that aren't presented to me in a tangible manner. It allows me to use more of my intuition and imagination and allows me to look behind the "subtle implications".
       The Sequential part of my mind allows me to organize information in a linear step by step manner. It seems that my train of thought is more logical and prefer a step by step process in order to figure out a problem.

    </article>
    <article>
        After googling a bunch of references to see how I can use this knowledge to apply my learning at DBC, I came up with the following ideas.
        <ol>
          <li>I need to be able to follow traditional procedures</li>
          <li>I am able/prefer to work alone</li>
          <li>I need to be able to able to have a written structure in terms of taking notes</li>
          <li>Will be more sure of myself when I am able to back my ideas with reading references and "expert" sources</li>
          <li>I need to be 100% sure of myself</li>
          <li>Might need more time to learn material thoroughly</li>
          <li>Need to utilize my abilities to think outside the box</li>
        </ol> 
    </article>
    <article>
        During the first three weeks at phase 0, the hardest part of my experience so far was peer pairing with other people. I tend to have a hard time being in the driver seat and not being able to navigate the way I want to solve the problem. I tend to get frustrated with some of the direction that I was being fed, which leads me to even more frustration. I think that being a Abstract Sequential thinker, I need to be able to learn how to work better with other people and take directions in a more receptive manner. Don't get me wrong, most of the pairing sessions were awesome, and the people I met were very nice and we fed off each other very well, with the exception of one pairing.
        Going forward, I need to remind myself that we need to perform each role to the best of our ability, even if it means that we don't solve problems the way I want it. 
    </article>
    <article>
        Growth vs Fixed Mindset. When we first took the test to figure out what kind of mindset we identified with, I was initially discouraged that mine was a Fixed Mindset. It seemed that all the positive attributes belonged to having a Growth Mindset. After being able reflect, I decided that being discouraged was not the right thing to do! If I wanted to change how my I learned new concepts and grow as a person and a developer, I realized I needed to be able to learn from my failures and not be afraid to ask questions. Everyday it is a struggle, and certain times during phase 0, I got very frustrated at times when I couldn't come up with a solution right away. Knowing that I wanted to change my mindset, I asked as many questions I had on our google communities without the fear of looking stupid. I wanted to be able to be vulnerable and learn from others by realizing my mistakes. I understand it's not going to happen overnight, but it is a process that I am working on daily. Just being able to be more fearless and not get insecure about things I don't know will be beneficial to me in the long run!
    </article>
      </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
     <h2>Issues in Tech - Online Security</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    For this week's cultural blog, I am going to be talking about what I learned about online security. These days it seems that every other month we hear about some business that gets hacked and allows hackers to obtain sensitive information about people's credit cards, and other valuable information that is meant to be kept private. I was curious about how these hackers go about obtaining these information and how we would be equipped to best protect ourselves.
    </article>
    <article>
    It seems that our best protection against these hackers comes from our firewalls. Firewalls are a network security system that controls the incoming and outgoing network traffic based on a specific set of rules. Most typtical firewalls establishes a sort of barrier between a trusted and secure internal network and other networks(webpages, the internet in whole). The reason why a firewall is important is that the way these hackers obtain information is by somehow obtaining your ip address during this transaction, and doing god knows what with it. 
    </article>
    <article>
    One of the basic ways that people can secure online privacy is just to be aware of potential threats and have an up to date anti virus program. Another neat trick I learned while researching up on this topic was that if you are about to enter sensitive information, make sure that the beginning of the URL reads "https://" rather than "http://"". The extra S indicates that the website is secured by a digital certificate. 
        
    </article>
    <article>
    There are many more ways that online security can be compromised besides the use of obtaining IP addresses. Scammers sending out malicious emails, false offers, and viruses through program downloads are just a few of the many ways your computer can be compromised. But if you are careful and are aware of potential threats that might come up on your computer, you have a better chance to protect yourself!

        
    </article>
    <article>
        
    </article>
      </section>

</div>
</div>
</div>


<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
        <h2>Feedback!</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    Welcome to week 5! It's definitely been a roller coaster ride so far during phase 0! This week's cutural topic is going to be regarding the feedback we've received and given out up till this point. I think for the most part, the pairing sessions have gone smoothly in terms of everyone knowing their roles and coming into the session prepared and ready to solve the problem. The great pairing sessions usually occur when your partner is up to date with the curriculum, and took the time to really go through the process that Dev outlines in terms of what we need to be talking about, and staying true to each persons role in the pairing sessions. There have been few instances though, I was frustrated in terms of what was happening during these meet ups.
    </article>
    <article>
    The pairing sessions where I came out of feeling like it was a genuine partnership, were truly rewarding. Being able to feed off your partner and work with a good flow requires both people being attentive and having a good understanding of that weeks curriculum.
    It's a great feeling when you figure out a challenge with your partner while tossing ideas around without deviating too much from the protocol set out by Dev in terms of driving and navigating. 
    </article>
    <article>
    The sessions where I felt really frustrated were the ones where I felt that my partner either didn't care about the work being completed, or if your partner completely ignored the driver/navigator protocol. There were times when we started off a session by assigning roles, and those roles were completely disregarded when we started working on the problem. I think just learning how I react to certain things during these sessions will ultimately only help me down the line. 
        
    </article>
    The feedback I've received so far have been very helpful in terms of reassuring me that I have been on track. It's a great feeling when your peers acknowledge that you were beneficial to the pairing, and that their experience was overall a positive one.
    Most of the reviews did not include something I needed to work on...not sure if that's a good thing or a bad thing. I think overall though, I know personally that I need to be more patient and understanding of everyones schedule. I feel like sometimes my frustrations were evident when the pairing sessions did not go the way I wanted it to, and reflecting back, I think it was pretty selfish of me. 
    <article>
    Writing feedback for everyone was pretty challenging. There were sessions where I felt nothing went wrong, and it was hard finding something that they can improve upon. Other sessions, it was hard to write something nice without being too specific or not nice. Overall though, I think it's a great way for students to get an idea of what they need to work on technically and culturally, and also introduces programmers to the concept of peer pairing.

        
    </article>
    <article>
        
    </article>
      </section>

</div>
</div>
</div>


<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Stereotype Threats</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    Stereotype Threats. What does that mean? For me personally, I initially thought that it meant to threaten someone using Stereotypes.... I know, don't laugh ok? So when I had a chance to dig deeper into what Stereotype Threats meant, it was pretty mindblowing. To sum it up in a very general definition, Stereotype Threats are when an individual is susceptible to harm and self sabotage, due to negative stereotypes that are centered around their ethnicity or gender.
    So my initial guess wasn't that off..<br><br>
    </article>
    
    <article>
    An example of a Stereotype Threat would be the following. Imagine a caucasian student, about to take a math test. He's in a class with a lot of asian students. The caucasian student starts feeling subconciously insignificant due to the fact that he thinks he "knows" that asians are just really good at math. This perception creates a negative and self esteem lowering feeling, and it results in the student getting lower grades than what he would've gotten, if he never heard of the stereotypes of asians and math. Pretty interesting huh?! Seems like there's been countless studies done on Stereotype Threats and how it negatively effects the results of whatever they are trying to do. <br><br>
    </article>
    
    <article>
    There was a study done on Stereotpe Threats where students were told that they were taking a test to measure their intellect. Another group of studedents were told that the test could not measure their intellectual ability. The African American students in Group A performed worse than the students in Group B. In Group B, the African American students performed just as well as the other ethnicities in the group. <br><br>
    </article>
    
    <article>
    Some of you may say, what are the variables when these studies are done? How was their intellect measured in comparison with the other different ethnic students? What are their socio-economic statuses?
    It's hard to figure out what all the variables are without getting into too much depth, but I would like to think that the research was done with consideration to a lot of different factors. If you trust in the research as I do, it's a pretty staggering discovery. The fact that you can self sabotage yourself due to mainstream perceptions in regards to race or gender, is a scary thought. If these studies are actually legit, just educating educators in how to present tests to a ethnically diverse group of students could potentially mean big results! I'm trying to remember how many times before a test I felt deflated and hopeless. Maybe I can now blame some of my poor grades due to Stereotype Threats? 
        
    </article>
    <article>
        
    </article>
      </section>

</div>
</div>
</div>


<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
        <h2>Affirmation and Stereotype Threats</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    Last week we talked a little about Stereotype Threats and how it can subconsciously affect your performance in a negative way when you are aware of a negative stereotype concerning your race or sex. Today we are going to talk a little bit about how to combat these Stereotype Threats. One of the suggested ways that you can combat Stereotype Threats is by affirmation. This pretty much means that an individual can affirm their self worth by thinking of characteristics or skills they possess which are important to the individual.
    <br><br>
    </article>
    
    <article>
    For myself personally, the list below is a few  characteristics that help me affirm my self worth. <br><br>
    <ul>
      <li>Accomplishment</li>
      <li>Accountability</li>
      <li>Control</li>
      <li>Growth</li>
      <li>Self Respect</li>
    </ul>
    </article>
    
    <article>
    On a scale of 1-5, (5 being the most I try to live up to these values) I would have to say that I would give myself a 2 or a 3.  <br><br>
    </article>
    
    <article>
    If I had to pick one value from the list above that means the most to me, I would have to choose Self-Respect. The reason why this value is the most imporatant to myself, is because it ties in a lot of my insecurities when there is a lack of it. When I get things done and accomplished, it all goes back into my self worth and how I view myself. I feel like I am at my full potential when I have confidence in myself and my abilities.<br><br>
    </article>
    <article>
    The last topic that someone asked my advice is for was regarding Personal development. I believe this kind of ties into Self Respect and Confidence because you want to be able to grow as a person, and be able to grow in the areas where you feel you are lacking. <br><br>
    </article>

    <article>
    Going forward, I need to be able to reinforce my confidence consistently so that I can avoid Stereotype Threats. Just being able to identify your weaknesses as a person and working on them is something I plan on doing going forward! Good luck to us all!
    </article>
  </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Conflict and how we all deal with it</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    In every point in someones life, we all deal with conflict. Whether its internal conflict, or conflict with family or friends, it all pretty much puts a strain on your emotional health and your overall well-being. Bottom line is, we all deal with conflicts on a daily basis, whether it's a minor or major one. I think as we mature and grow wiser, it's important to really evaluate where your emotions comes from and figure out what the actual cause of the problems are. <br>
    </article>
    
    <article>
    If you've ever had a long term intimate relationship with another person, you probably know as well as I do that conflict is something that sometimes is unavoidable. When you spend so much time with a particular person and have that comfort level, it really is easy to let your emotions, in a sense, run wild. Your boundaries for certain things that your SO does, at times, makes you lose your patience. I'm gonna be talking about a recent conflict I've had with my girlfriend, and how I eventually broke it down to the root of the problem.<br>
    </article>
    
    <article>
    The times when my girlfriend and I fight the most is when one of us, or both, are in a somewhat bad/negative mood. We tend to lose our patience and tend to become more argumentative. We recently adopted a puppy together, and while it brings us a lot of joy and happyness, it also sometimes puts a strain on my relationship with my GF.
    <br><br>
    <img src = '../imgs/20150504_115756.jpg' style ='width:50%;height:5%'><br><br>
    </article>
    
    <article>
    We sometimes fight about the stupidest things. What kind of food we should feed the dog, how we should train him, and all sorts of topics that don't necessarily need to be conversated in a hostile way. One particular argument stands out for me, where we fought about who should be walking the dog. lol, i know, it's stupid right? But both of us are big dog lovers and on that particular day, both of us were not in the right state of mind. So the argument proceeded, and we were pretty upset with each other. <br><br>
    </article>
    <article>
    Initially, my thought was, who cares who walks the dog? Why is she being like this? Why is she making such a big deal about who gets to hold the friggin leash? I didn't understand why she was so upset. So like most of our fights, we didn't really talk to each other for awhile, all while putting on a angry face that let each of us know that we weren't happy with one another. 
    </article>

    <article>
    After taking some time to cool off, we talked about our fight and why it escalated to the point it did. It was something very silly to be honest, and I didn't really take in consideration of the fact that she wanted to be more involved with taking care of OUR dog. Also, we weren't in the best of moods that day, which resulted us being very snappy with each other. I think it's very important to be able to analyze why the actual fight happened. Sometimes, you fight about topics that your not really even angry about, but there's topics that lie beneath the argument, that can make things a lot worse.<br><br> What did I learn from this? I learned that it's important to be able to understand the deeper issues at hand, and to be able to be more empathetic about people's current state of emotions. var happy_girlfriend == happy life. =] Till next week!
    </article>
  </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Asking Good Questions</h2>

  <section>

    <article>
    <h4>August 16th, 2015</h4>
    </article>
    <article>


    </article>
    
    <article>
    I believe that learning how to ask good questions will be an important skill going forward. In order to get help from your peers, it's vital that all the information and the format of the question be in a manner where it is easy for your peers to understand.
    </article>
    
    <article>
    When asking a question, it is important to remember that nobody will be able to help you if you do not explain and clarify yourself in the most practical way. I learned that the best way to start off when asking a question to your peers is to start it off with a title that summarizes the problem you have at hand. Nothing too long, but nothing too short and generic. You want to make the question very easy to follow! By taking a little bit more time to include all the relevant information ( whether it's your code or links to sandboxes) , you might be surprised at how people will be responding to you!  

    </article>
    
    <article>
    Another important part of posting questions is to always proof-read. As stated above, it's important to make sure it's easy to follow! Making sure your links are working right and to have all the relavant code included in the question, will benefit both you and the people helping you.
    </article>
    <article>
    To sum it up, when asking questions, I believe by taking a little bit more time to format your question the right way will make a world of a difference! It's important to remember that you are trying to help the people that are helping you, and by giving a little bit more effort, everyone will be happy =] 
    </article>

    <article>
    </article>
  </section>

</div>
</div>
</div>


<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Version Control</h2>

  

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
        What is Version Control??
        Version control is exactly what it sounds like. It is a way to control the progress of your work by saving certain versions of it. Think of it something like a checkpoint. With version control, you can keep track of all your files and it keeps a log of all the changes you've made and when you made them! Imagine if you introduced an error to your work, but can't seem to figure out what's wrong? If you took the necessary steps to "commit", "add", and "push" your work, you can go back to an earlier version of it and work back from there! This is all possible with the help of something called "Git". 
     
    </article>
    <article>
        You can think of Git as a version control system that helps developers keep track of their changes that were made on their program/project. It is a program that ANYBODY can download for free onto your own personal computer! Git helps you save certain versions of your work with certain commands that you can easily learn from the command line. Commands such as "Git -commit" and "Git add" helps you keep track of versions of your work, so that you can easily reference back to what kind of changes were made and when they were made!
        Git also has the ability to create a "branch" of your work. This pretty much means you can replicate your work, make changes without affecting your main version, and when your ready, you can merge them all together! 
    </article>
    <article>
        Github and Git are not the same thing! Even though they sound similar, it has major differences. Github is an online, remote "hub" that allows users to store or file "repositories", which you can then share and work collectively with other developers! 
        The reason why you should be using Github is that the developer community often works with multiple people on certain projects. If you didn't have this online platform where you can store your files, not everyone would be able to work on the project at the same time with the same files! With the help of Github and Git, you can collectively work together with as many people as you want, and once your ready, you can help to merge all the work seamlessly! Sounds cool huh?
    </article>
      </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Classes vs ID</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
      The differences between classes and ID's seem pretty fairly obvious at first. ID's are unique and can't have more than one of the same ID name in an html file and Classes can belong to multiple elements. You might be wondering why we need to use these identifiers? We associate ID's and Classes to tags in the html document due to the fact that we need to be able to single out elements or group of elements to apply our styling to. Once we associate an ID or Class with an element, we can create a seperate stylesheet (CSS) and help to design specific parts of our HTML skeleton.
    </article>
    <article>
        As I mentioned above, it seems that it's pretty easy to distinguish the differences between Classes and ID's, right? The hard part is being able to determine when and where you should be using these identifiers. You want to be able to use ID's where you want to isolate a single element in your HTML document. For example, if you want to target a specifc list on your web page, you can give it an ID and help to style ONLY that specific list. The styles and commands you give for that ID name in your CSS sheet will ONLY affect that element.
    </article>
    <article>
        For classes, we want to be able to associate class names with elements that we want the same design and formatting for. If your web page contained multiple buttons, and you wanted all of these buttons to have the same margins, styling, font, and size, we could just help to write down the Class name in our CSS sheet, and insert styling commands which will be applied for ALL the elemnents you associated that Class name with.
    </article>
    <article>
        How do we write the Class name in our CSS Sheet? I'm glad you asked.

        In your CSS document (should end with filename.css), you can do the following

        For Classes:

        .ClassName {
          font-size:5em
        }

        For ID's

        #IDName {
          font-size:5em
        }

        Just need to remember for Classes, put the "." before the Classname (no space!) and for ID's, insert the "#" sign before the ID Name.
    </article>
  </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Comparing Arrays and Hashes</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
      What are Arrays and Hashes?
      Arrays and Hashes are both used in Ruby in order to store a bunch of data! While the syntax to write out Arrays and Hashes might be different, they are both used when you want to be able to store a significant ( or just a little ) data so that you can access the information within the Array or Hashes whenever you want. How do you access the data stored in Arrays and Hashes? Good question! Arrays and Hashes are both indexed collections. What do I mean by that? Both can be accessible using certain syntax. With Arrays, the indexes are integers, where the first value in an array starts from the index "0", and goes incrementally up by 1. For Hashes, you can access the "values" using "keys" that are associated with each value in a Hash. 
    </article>
    <article>
        Before I go any further, let me show you how Hashes and Arrays look like.
        <br>
        <br>
        Ex of an Array:
        <br>
        <br>
        array = []  <== this is an empty array with no data.
        <br>
        <br>
        array = ['hello', 'bye', 9] <== as you can see, you can store all types of different objects in an array. Strings and integers are included in the example above, but you can also store any object in Ruby (Hashes, other Arrays, methods!).

        Ex of Hashes:
        <br>
        <br>
        hash = {}  - An empty hash
        <br>
        <br>
        hash = {:ramen => 5, :rice => 1, :beef => 10} - keys and symbols. The key starts with ":" followed by the key name, and it points to the value associated with each key.

    </article>
    <article>
        Now that you know how arrays and Hashes look like, let me show you how you would create them in Ruby. Both arrays and Hashes can be created using literal and constructor notations.
        <br>
        <br>
        Arrays:
        <br>
        <br>
        Array = []
        Array.new
        <br>
        <br>
        Hashes:
        <br>
        <br>
        hash = Hash.new(0)
        hash = {}


    </article>
    <article>
        As you see from the examples above, Hashes and Arrays are great ways to store a large amount of information. You can easily iterate over both, making life a lot easier for the programmer! 

        
    </article> 
      </section>

</div>
</div>
</div>


<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Enumerable#cycle</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    What is an Enumerable module you might ask? Well the answer is that the module provides a set of methods a way to traverse, sort, search and manipulate collections of data. The only requirement of classes that use Enumerables require is that the class has to define an instance method called each, and in return, the Enumerable gives the objects of the specific class with different sorts of collection related behaviors.
      
    </article>

    <article>
    For today's blog I am going to focus in on Enumerable#cycle.
    What the cycle method does is that when called on an object, it iterates infinitely, which produces an infinite loop(When called without a block). When passing an argument to cycle, it specifies to the number of times to "cycle", not the number of elements to cycle through.
    </article>
    <article>
    <br><br><br>
    <img src='../imgs/cycle.jpg' style='width:50%;height:10%'>
    <br><br><br>
    When #cycle is not passed to a block, it automatically returns an Enumerator. When that Enumerator is retrieved, it can use all different sorts of methods to retrieve and manipulate data. From there we can chain method #cycle, in order to find the next, last, and other internal methods that ruby has already built in. <br><br><br>

    <img src ='../imgs/cycleex.jpg' style='width:50%;height:10%'><br><br><br>

    The example above shows an example of how the #cycle Enumerator works. Note that when calling "next" on the cycle_enumerator produces a different value each time. This works because it originated from #cycle, and by calling next, it just returns the next element in the array via the cycle circle. Using these enumerable methods will able us to use more pragmatic and readable code. Seems like a win win to me!

    </article>
    <article>
      

        
    </article> 
      </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Classes</h2>

  <section>

    <article>
    <h4>August 10th, 2015</h4>
    </article>
    <article>
    Hola. For this week's tech blog I'm going to reflect on what Classes are and their syntax in the Ruby language. Just a reminder, I learned most of what I'm trying to teach these past two weeks, so hopefully I'm getting this right!
      
    </article>
    <article>
    One important thing we've all heard when beginning to learn Ruby is that EVERYTHING IS AN OBJECT!! In the case of Classes, that is no different! With Object Oriented Programming, assigning certain behaviors and properties to Classes have their benefit! 
    Let's start off by showing you the syntax for creating a Class. I'm going to be going over one we completed this week for Dev.
    <br><br><br>
    <img src = '../imgs/SS.jpg' style='width:50%;height:10%'>
    <br><br>
    </article>
    <article>
    In the example above we start off by calling the keyword "class" and then the name of the class, "Die". Note that the first letter of the class name is capitalized. Whenever Ruby creates a new object, it looks for a method named "initialize" and executes what is within the method and sets certain characteristics throughout the entire Class. In the example above, I created a new variable called @labels and set it to the labels in the argument of the initialize method. Seems kind of weird huh? I initially thought so too till I learned the reasoning behind it. The reason why we are setting the argument of the method, "@labels" equal to "labels" is that if you set these characteristics within the "initialize" method, you are setting certain characteristics that you can utilize throughout the whole class! If you happen to have multiple methods within a class, you can easily refer to these variables outside of the "initialize" method!
    
    </article>
    <br>
    <article>
    <img src = '../imgs/SSS.jpg' style='width:50%;height:10%'><br><br><br>
    In the example above, you can see that I put in a conditional within initialize if the @labels.length == 0 to raise an argument Error. Outside of the initialize method, I also created a method called "sides". Within "sides", it returns the length of "@labels". The purpose of building this class was to have the class accept an array of strings, and with a random roll, returns one of the strings in the array. <br><br>

    <img src = '../imgs/SSSS.jpg' style='width:50%;height:10%'>
    </article> 
    <article>
    Above we can see we created another method called "roll" and within it, assigned the results of a random string based on the number of "@labels" to "random_string".
    <br>
    After the Class is now functional, we "create" this class by calling "Die.new" and passing in an array of strings. When calling "die.roll", we take the Object's characteristics and act on the behavior of the method "roll", which produces a random string from the argument given. If you call "die.sides", it will show you how many elements there are in the argument given. Pretty neat huh? The ability to Create a Class and be able to act on different behaviors inside AND outside of the class gives us a lot of pretty cool options within an Object Oriented Programming language!
    </article>
  </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>OO vs Functional Programming</h2>

  <section>

    <article>
      <h4>August 10th, 2015</h4>
    </article>
    <article>
      Today I'm gonna talk a little about Object Oriented vs Functional Programming. You might be asking, what does that exactly mean?<br><br><br>
      <img src = '../imgs/definition.jpg' style='width:50%;height:10%'><br><br><br>
      <img src = '../imgs/OO.jpg' style='width:50%;height:10%'><br><br>
    </article>
    
    <article>
      After googling "functional programming" and "Object Oriented Programming", the above is what I learned. It seems that there are fundamentally different approaches to coding when using each style.
      <br><br>
      I knew a little bit about functional programming before writing this blog due to some rough basic knowledge of Javascript. It seemed that all the tutorials and tips that I picked up through online resources demanded practical programming. It seems like functional programming focuses more on creating functions that are able to communicate with each other in a practical manner, where variables and expressions do not change(outside of the arguments given to a function). It relies more on mathmatical functions and stays away from behavior that might change the function itself. <br><br>
    </article>
    
    <article>
      Object Oriented programming on the other hand, focuses more about communication between objects. If you haven't studied Ruby yet, it pretty much preaches to you from the get go that EVERYTHING IS AN OBJECT, and that every object is an instance of a class. The fundamental difference between OO and Functional programming is that in OO, the objects methods can access the data that lies beneath. <br><br>
    </article>

    <article>
      It's hard to go really further in depth due to the fact that we have exactly one hour to research and blog about the differences, but from my perspective, there doesn't seem like there's too much differences besides the fact that one uses functions witout changing the state of the function itself, and the other is able to change certain attributes and access methods within their class. Mind you, I'm learning this all on the fly and I could be horribly off in my assessment. I'm hoping that with more practice in OO and more experience with languages that gear towards functional programming, I'll get a better hang of it. Till that time comes. See you next week!
    </article> 
    <article>
    </article>
  </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Ruby loops vs Javascript loops!(WHILE AND FOR)</h2>

  <section>
    <article>
      <h4>August 10th, 2015</h4>
    </article>
    
    <article>
    Looping is a critical part of any programming language that allows the user to loop through large sets without writing a bunch of unecessary code. If you have studied any programming language, one of the first concepts you learn is the different types of loops you can use to manipulate data. Today, I'm going to be focusing in on the different types of loops for Javascript and Ruby!<br><br>
    </article>
    
    <article>
    If you are somewhat familiar with Javascript and Ruby, I'm sure you've seen keywords for both languages such as "for", "while", and "map". These are all different looping methods that both languages provide. There are subtle differences in syntax and functionality for each language. Below is an example of a "for" loop in Javascript. <br><br>
    <img src = '../imgs/forloop.jpg' style='width:50%; height:10%;'><br><br>
    </article>
    
    <article>
    The loop above is looping through the "array" array and console logging each element in the array. Within the for loop paranthesees, the variable "i", is pointing at the number you want the loop to begin with, which in this case is 0. We want to continue to loop UNTIL the variable "i" is less than the length of the "array"s length. We also want to be able to increment this loop by one (i++ means we want to counter to go up by one). The values within the "()" allows the programmer to set conditionals so that it can loop anyway you want it! If we wanted to start the loop at a value of 3, we can just write i = 3. If we wanted to increment the counter by 2, we can write i + 2. Using this information, we can manipulate data sets so that we can get the desired result and loop through information without writing a bunch of lines of code!<br><br>
    </article>

    <article>
    For reasons unknown to myself, for loops in Ruby are highly discouraged. I'll show you a quick example of a for loop in Ruby. <br><br>
    <img src = '../imgs/rubyforloop.jpg' style='width:50%;height:5%'><br><br>
    The above loop will puts the numbers 1 through 20 inclusive to the screen. The keywords you can focus in on is "for" and "in". The "i" in this loop is pointing to the element it is currently at. You can put any variable name besides "i". It is not the standard keyword in a for loop!! 
    </article> 
    
    <article>
    The other popular loops for both languages are the "while loops". Below is an example of a while loop in Javascript and Ruby.<br><br>
    <img src = '../imgs/whileruby.jpg' style ='width:50%;height:200px'><br><br>
    <img src = '../imgs/whilejavascript.jpg' style ='width:50%; height:10%'><br><br>
    </article>

    <article>
    The above examples shows the difference in while loops for Javascript and Ruby.
    Besides very subtle syntax differences, the concept is almost the same. In both languages, they define a variable outside of the while block, and calls for the loop to keep looping WHILE the variable "i" is less than 10. Within the body of both loops, "i" is incremented by 1. Both loops will print out 1 through 9. <br><br>
    </article>

    <article>
    There are many more ways to loop in both languages but these are two of the main methods you will be seeing. Will cover more methods as we keep learning! Till next week!
  </section>

</div>
</div>
</div>



<div class='container' id ='tech-b'>
  <div class='row'>
    <div class='col-md-12'>
      <h2>Computer Memory</h2>
      

  <section>
  <article>
  <h4>August 10th, 2015</h4>
  </article>
    <article>
    What exactly is computer memory? If your somewhat familiar around a computer, the chances are that you've heard the term before. Computer memory is pretty much what it sounds like. It is just a storage area for computers. It contains information and other data that is essential for a computer to be able to run properly.<br><br>
    </article>
    
    <article>
    A computers memory usually consists of millions of bytes. The unit K, is often referred to when you are talking about memory capacity for a computer. "K" stands for kilobytes. When talking about computer memory, you might also hear the term megabytes, and gigabytes. Megabytes equals to 1024 K, and gigabytes refers to 1024 megabytes!<br><br>
    </article>
    
    <article>
    There are two types of memory in a computer. There's "Read only memory", also referred to as "ROM". There's also "Random Access Memory", which is also called "RAM". ROM is the part of the computer that stores the permament memory that holds important information that allows the computer to do simple functions, like running a program, or being able to launch a game from your computer. RAM stores the input data that can be changed or erased. It is considered the "volatile" memory, because most of the data that it holds will be rebooted or erased when the computer is turned off. Both of these memory types are essential for a computer to be able to process things faster and efficiently. The more RAM and ROM you have on your computer, the better it is! It will allow programs and other applications to be ran at a faster and more efficient pace.<br><br>
    </article>

    <article>
    Computer memory is an essential part of the computers brain that is essential for storage of files and running simple applications. Without computer memory, where else would you be able to store information?? A computer without a place to store memory is pretty much not a computer! 
    </article> 
    
    <article>
    </article>

    <article>
    </article>

    <article>
    </article>
  </section>

</div>
</div>
</div>